1. **В чём основное различие между unittest и pytest?**  
   `unittest` — встроенная библиотека, использует классы и методы, похожа на xUnit. `pytest` — сторонняя, более гибкая и лаконичная, с поддержкой параметризации и удобных фикстур.

2. **Почему важно использовать автоматические тесты при разработке?**  
   Они позволяют быстро обнаруживать ошибки, упрощают рефакторинг и обеспечивают стабильность проекта в долгосрочной перспективе.

3. **Какие есть виды ассертов в unittest и pytest?**  
   - `unittest`: `assertEqual`, `assertTrue`, `assertIsNone`, `assertRaises` и др.  
   - `pytest`: использует ключевое слово `assert`, и автоматически форматирует сообщение об ошибке.

4. **Что делает @pytest.mark.parametrize?**  
   Позволяет запускать один и тот же тест с разными наборами входных данных, снижая дублирование кода.

5. **В каких случаях вы бы предпочли использовать pytest вместо unittest?**  
   При большом количестве тестов, где важна читаемость, гибкость, параметризация и фикстуры — однозначно `pytest`.
